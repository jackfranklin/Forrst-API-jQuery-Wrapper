This is the first jQuery wrapper for the Forrst API. The Forrst API is currently very new and as such not much functionality is in place. Currently this wrapper will allow you to get a user's posts however as more is added to the API the plugin will replicate it.

For instructions on how to use it, see the Homepage: jackfranklin.co.uk/forrst_api/demo.html.

Any problems you can grab me on:
Twitter: @Jack_Franklin
Forrst: jackfranklin
Skype: jack_franklin

PLEASE PLEASE PLEASE use the minified version for live sites.

If you want to fork this please do and make your edits. Also, let me hear about it! I'd love to see what you're all up to !

Options:
//The values of each variable are the defaults
		username: 'kyle', //your forrst username [REQUIRED]
		count: 5, //number of posts you want to retrieve, cannot be more than 10 [REQUIRED]
		since: null, //see below for an explanation 
		lastid: null, //see below for an explanation
		debugMode: false, //if you are having issues turn this to true, it outputs an array of errors.
		callback: function() {}, //a function to run once the data is retrieved [REQUIRED]
		apiVersion: 'v1', //version of the API - used incase Forrst suddenly change their version.
		cantFetchPosts: 'Sorry, there has been a problem fetching information from Forrst.'
						//the error message shown if there was an issue with Forrst.
		fetchedError: 'We managed to interact with Forrst but all of your posts are set to private, so we cannot display them here.'
						//error shown if Forrst was contacted but no data was returned. 
						//Usually this is due to posts being set as private.


Example:
	$.forrstPosts({
			'username':'kyle',
			'count':5,
			callback:function(data, success) {
				if(success)
				{
					$.each(data, function(index, val) {
					  //here 'val' refers to each post
					 //this is where you can access the object and do with what you please
					});
				}
			}
		})


The Callback:
	function(data, success)
		var data //if successful, this contains an array of objects, one per post. The number is whatever you set 'count' as.
			//If data could not be fetched, this contains the error message explaining what went wrong. 
			//If debugMode is set to TRUE, this contains an array detailing the issues.
		var success //this is a boolean. If posts have been successfully retrieved, it is set to TRUE. If they could not be fetched, this is FALSE.